out_data <- data.frame()
plan(multisession)
out_data <- foreach(
i = 1:nrow(iterated_params),
.combine = 'rbind',
.inorder = FALSE) %dofuture% {
cur_params <- iterated_params[i,]
cur_pars <- as.list(cur_params)
if (cur_pars$ch > cur_pars$dh) {
root_soln <- uniroot(f = PredEq, interval = c(1e-10, 1), cur_pars)
h_soln <- root_soln$root
mp_soln <- GetPM(h_soln, cur_pars)
p_soln <- mp_soln[1]
m_soln <- mp_soln[2]
} else {
h_soln = 0
p_soln = 0
m_soln = 0
}
J <- BuildJacobian(h_soln, p_soln, m_soln, cur_pars)
cur_eig <- GetEig(J)
cur_feas <- (h_soln > 0) * (p_soln > 0) * (m_soln > 0)
cur_stable <- cur_eig < 0
cur_outcome <- ifelse(!cur_feas, "\nNot feasible\n",
ifelse(cur_stable, "\nFeasible\nand stable\n",
"\nFeasible\nbut unstable\n"))
cur_dyn <- cbind(cur_params, data.frame(Outcome = cur_outcome))
cur_dyn
}
plHeatMapClassicComp <- ggplot(out_data,
aes(x = cp, y = cm, fill = Outcome)) +
facet_wrap(~dh, labeller = label_bquote(d[h] == .(dh))) +
geom_tile() + theme_classic() +
labs(x = expression("Pathogen Colonization" ~ (c[p])),
y = expression("Mutualist Colonization" ~ (c[m])),
fill = "") +
scale_fill_manual("Coexistence\nstatus:", values = c("#0072B2", "#D55E00")) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
theme(axis.text = element_text( size = 10 ),
panel.spacing = unit(2, "lines"),
panel.background = element_rect(fill = NA),
strip.background = element_blank(),
axis.text.x = element_text(angle = 45, vjust = 0.5),
text = element_text(size=15),
plot.title.position = "plot",
plot.caption.position =  "plot") +
ggtitle("C")
plHeatMapClassicComp
ch <- 4
chm <-  -1 # needs to be bigger than or equal to ch
dh <- c(0, 0.5, 1)
dhp <- 0
cp <- seq(5, 10, length.out = 10)
dp <- 1
cm <- seq(5, 35, length.out = 10)
dm <- 1
in_pars <- crossing(ch = ch, chm = chm, dh = dh, dhp = dhp,
cp = cp, dp = dp,
cm = cm, dm = dm)
in_pars$chm <- in_pars$ch
num_repl <- 1
iterated_params <- bind_rows(replicate(num_repl, in_pars, simplify = FALSE))
out_data <- data.frame()
plan(multisession)
out_data <- foreach(
i = 1:nrow(iterated_params),
.combine = 'rbind',
.inorder = FALSE) %dofuture% {
cur_params <- iterated_params[i,]
cur_pars <- as.list(cur_params)
if (cur_pars$ch > cur_pars$dh) {
root_soln <- uniroot(f = PredEq, interval = c(1e-10, 1), cur_pars)
h_soln <- root_soln$root
mp_soln <- GetPM(h_soln, cur_pars)
p_soln <- mp_soln[1]
m_soln <- mp_soln[2]
} else {
h_soln = 0
p_soln = 0
m_soln = 0
}
J <- BuildJacobian(h_soln, p_soln, m_soln, cur_pars)
cur_eig <- GetEig(J)
cur_feas <- (h_soln > 0) * (p_soln > 0) * (m_soln > 0)
cur_stable <- cur_eig < 0
cur_outcome <- ifelse(!cur_feas, "\nNot feasible\n",
ifelse(cur_stable, "\nFeasible\nand stable\n",
"\nFeasible\nbut unstable\n"))
cur_dyn <- cbind(cur_params, data.frame(Outcome = cur_outcome))
cur_dyn
}
plHeatMapClassicComp <- ggplot(out_data,
aes(x = cp, y = cm, fill = Outcome)) +
facet_wrap(~dh, labeller = label_bquote(d[h] == .(dh))) +
geom_tile() + theme_classic() +
labs(x = expression("Pathogen Colonization" ~ (c[p])),
y = expression("Mutualist Colonization" ~ (c[m])),
fill = "") +
scale_fill_manual("Coexistence\nstatus:", values = c("#0072B2", "#D55E00")) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
theme(axis.text = element_text( size = 10 ),
panel.spacing = unit(2, "lines"),
panel.background = element_rect(fill = NA),
strip.background = element_blank(),
axis.text.x = element_text(angle = 45, vjust = 0.5),
text = element_text(size=15),
plot.title.position = "plot",
plot.caption.position =  "plot") +
ggtitle("C")
plHeatMapClassicComp
out_data = readRDS("4_IniCond_data.RDS")
plIniCond <- ggplot(out_data,
aes(x = IniHost, y = IniMut, fill = Coexist)) +
geom_tile() + theme_classic() +
scale_fill_manual(values = c("blue", "gray"), na.value="white", na.translate = F) +
labs(x = "Initial Frequency of the Host",
y = "Initial Frequency of the Mutualist",
fill = "") +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
ggtitle("E") +
theme(axis.text = element_text( size = 10),
legend.position = "top",
panel.background = element_rect(fill = NA),
strip.background = element_blank(),
text = element_text(size=15),
plot.title.position = "plot",
plot.caption.position =  "plot")
plIniCond
jpeg("./figs/Fig3MutBenefit.jpeg",
width = 4100, height = 3250, res = 300)
grid.arrange(plMutBenefit, plHeatMap,
plDyn, plBifurcation, plIniCond,
layout_matrix = layout_mat)
ch <- c(0.25, 1.25, 1.75)
chm <- seq(1.75, 25, length.out = 20) # needs to be bigger than or equal to ch
dh <- 1
dhp <- 0
cp <- 5
dp <- 1
cm <- seq(4, 16, length.out = 20)
dm <- 1
in_pars <- crossing(ch = ch, chm = chm, dh = dh, dhp = dhp,
cp = cp, dp = dp,
cm = cm, dm = dm)
iterated_params <- bind_rows(replicate(num_repl, in_pars, simplify = FALSE))
out_data <- data.frame()
out_data <- foreach(
i = 1:nrow(iterated_params),
.combine = 'rbind') %dofuture% {
cur_params <- iterated_params[i,]
cur_pars <- as.list(cur_params)
root_soln <- uniroot(f = PredEq, interval = c(0, 1), cur_pars)
h_soln <- root_soln$root
mp_soln <- GetPM(h_soln, cur_pars)
p_soln <- mp_soln[1]
m_soln <- mp_soln[2]
J <- BuildJacobian(h_soln, p_soln, m_soln, cur_pars)
cur_eig <- GetEig(J)
cur_feas <- (h_soln > 0) * (p_soln > 0) * (m_soln > 0)
cur_stable <- cur_eig < 0
cur_outcome <- ifelse(!cur_feas, "\nNot feasible\n",
ifelse(cur_stable, "\nFeasible\nand stable\n",
"\nFeasible\nbut unstable\n"))
cur_dyn <- cbind(cur_params, data.frame(Outcome = cur_outcome))
cur_dyn
}
# Weird stuff I had to do to change the labelling order to descend
out_data <- mutate(out_data, ch_label = paste0("c[h] == ", ch))
out_data$ch_label <- factor(out_data$ch_label,
levels = c("c[h] == 1.75", "c[h] == 1.25", "c[h] == 0.75", "c[h] == 0.25"))
plHeatMap <- ggplot(out_data,
aes(x = chm, y = cm, fill = Outcome)) +
geom_tile() + theme_classic() +
scale_fill_manual("Coexistence\nstatus:", values = c("#0072B2", "#F0E442", "#D55E00")) +
labs(x = expression(atop("Added Host Colonization from the Mutualist" ~ (c[hm]))),
y = expression("Mutualist Colonization" ~ (c[m])),
fill = "") +
facet_grid(
rows = vars(ch_label),
labeller = label_parsed
) +
# facet_wrap(~ch, labeller = label_bquote(rows = c[h] == .(ch)), ncol = 1) +
ggtitle("B") + scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
theme(axis.text = element_text( size = 10 ),
panel.background = element_rect(fill = NA),
panel.spacing = unit(1, "lines"),
strip.background = element_blank(),
text = element_text(size=15),
plot.title.position = "plot",
plot.caption.position =  "plot")
plHeatMap
ch <- c(0.25, 1.25, 1.75)
chm <- seq(1.75, 25, length.out = 2) # needs to be bigger than or equal to ch
dh <- 1
dhp <- 0
cp <- 5
dp <- 1
cm <- seq(4, 16, length.out = 2)
dm <- 1
in_pars <- crossing(ch = ch, chm = chm, dh = dh, dhp = dhp,
cp = cp, dp = dp,
cm = cm, dm = dm)
iterated_params <- bind_rows(replicate(num_repl, in_pars, simplify = FALSE))
out_data <- data.frame()
out_data <- foreach(
i = 1:nrow(iterated_params),
.combine = 'rbind') %dofuture% {
cur_params <- iterated_params[i,]
cur_pars <- as.list(cur_params)
root_soln <- uniroot(f = PredEq, interval = c(0, 1), cur_pars)
h_soln <- root_soln$root
mp_soln <- GetPM(h_soln, cur_pars)
p_soln <- mp_soln[1]
m_soln <- mp_soln[2]
J <- BuildJacobian(h_soln, p_soln, m_soln, cur_pars)
cur_eig <- GetEig(J)
cur_feas <- (h_soln > 0) * (p_soln > 0) * (m_soln > 0)
cur_stable <- cur_eig < 0
cur_outcome <- ifelse(!cur_feas, "\nNot feasible\n",
ifelse(cur_stable, "\nFeasible\nand stable\n",
"\nFeasible\nbut unstable\n"))
cur_dyn <- cbind(cur_params, data.frame(Outcome = cur_outcome))
cur_dyn
}
# Weird stuff I had to do to change the labelling order to descend
out_data <- mutate(out_data, ch_label = paste0("c[h] == ", ch))
out_data$ch_label <- factor(out_data$ch_label,
levels = c("c[h] == 1.75", "c[h] == 1.25", "c[h] == 0.75", "c[h] == 0.25"))
plHeatMap <- ggplot(out_data,
aes(x = chm, y = cm, fill = Outcome)) +
geom_tile() + theme_classic() +
scale_fill_manual("Coexistence\nstatus:", values = c("#0072B2", "#F0E442", "#D55E00")) +
labs(x = expression(atop("Added Host Colonization from the Mutualist" ~ (c[hm]))),
y = expression("Mutualist Colonization" ~ (c[m])),
fill = "") +
facet_grid(
rows = vars(ch_label),
labeller = label_parsed
) +
# facet_wrap(~ch, labeller = label_bquote(rows = c[h] == .(ch)), ncol = 1) +
ggtitle("B") + scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
theme(axis.text = element_text( size = 10 ),
panel.background = element_rect(fill = NA),
panel.spacing = unit(1, "lines"),
strip.background = element_blank(),
text = element_text(size=15),
plot.title.position = "plot",
plot.caption.position =  "plot")
plHeatMap
plHeatMap
show(plHeatMap)
ch <- c(0.25, 1.25, 1.75)
chm <- seq(1.75, 25, length.out = 10) # needs to be bigger than or equal to ch
dh <- 1
dhp <- 0
cp <- 5
dp <- 1
cm <- seq(4, 16, length.out = 10)
dm <- 1
in_pars <- crossing(ch = ch, chm = chm, dh = dh, dhp = dhp,
cp = cp, dp = dp,
cm = cm, dm = dm)
iterated_params <- bind_rows(replicate(num_repl, in_pars, simplify = FALSE))
out_data <- data.frame()
out_data <- foreach(
i = 1:nrow(iterated_params),
.combine = 'rbind') %dofuture% {
cur_params <- iterated_params[i,]
cur_pars <- as.list(cur_params)
root_soln <- uniroot(f = PredEq, interval = c(0, 1), cur_pars)
h_soln <- root_soln$root
mp_soln <- GetPM(h_soln, cur_pars)
p_soln <- mp_soln[1]
m_soln <- mp_soln[2]
J <- BuildJacobian(h_soln, p_soln, m_soln, cur_pars)
cur_eig <- GetEig(J)
cur_feas <- (h_soln > 0) * (p_soln > 0) * (m_soln > 0)
cur_stable <- cur_eig < 0
cur_outcome <- ifelse(!cur_feas, "\nNot feasible\n",
ifelse(cur_stable, "\nFeasible\nand stable\n",
"\nFeasible\nbut unstable\n"))
cur_dyn <- cbind(cur_params, data.frame(Outcome = cur_outcome))
cur_dyn
}
# Weird stuff I had to do to change the labelling order to descend
out_data <- mutate(out_data, ch_label = paste0("c[h] == ", ch))
out_data$ch_label <- factor(out_data$ch_label,
levels = c("c[h] == 1.75", "c[h] == 1.25", "c[h] == 0.75", "c[h] == 0.25"))
plHeatMap <- ggplot(out_data,
aes(x = chm, y = cm, fill = Outcome)) +
geom_tile() + theme_classic() +
scale_fill_manual("Coexistence\nstatus:", values = c("#0072B2", "#F0E442", "#D55E00")) +
labs(x = expression(atop("Added Host Colonization from the Mutualist" ~ (c[hm]))),
y = expression("Mutualist Colonization" ~ (c[m])),
fill = "") +
facet_grid(
rows = vars(ch_label),
labeller = label_parsed
) +
# facet_wrap(~ch, labeller = label_bquote(rows = c[h] == .(ch)), ncol = 1) +
ggtitle("B") + scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
theme(axis.text = element_text( size = 10 ),
panel.background = element_rect(fill = NA),
panel.spacing = unit(1, "lines"),
strip.background = element_blank(),
text = element_text(size=15),
plot.title.position = "plot",
plot.caption.position =  "plot")
plHeatMap
plHeatMapClassicComp
source("0_Functions.R")
ch <- seq(1.5, 10, length.out = 5)
chm <-  -1 # needs to be bigger than or equal to ch
dh <- seq(0.0001, 1.5, length.out = 5)
dhp <- 0
cp <- 5
dp <- 1
cm <- c(6, 10, 25)
dm <- 1
in_pars <- crossing(ch = ch, chm = chm, dh = dh, dhp = dhp,
cp = cp, dp = dp,
cm = cm, dm = dm)
in_pars$chm <- in_pars$ch
num_repl <- 1
iterated_params <- bind_rows(replicate(num_repl, in_pars, simplify = FALSE))
out_data <- data.frame()
plan(multisession)
out_data <- foreach(
i = 1:nrow(iterated_params),
.combine = 'rbind',
.inorder = FALSE) %dofuture% {
cur_params <- iterated_params[i,]
cur_pars <- as.list(cur_params)
if (cur_pars$ch > cur_pars$dh) {
root_soln <- uniroot(f = PredEq, interval = c(1e-10, 1), cur_pars)
h_soln <- root_soln$root
mp_soln <- GetPM(h_soln, cur_pars)
p_soln <- mp_soln[1]
m_soln <- mp_soln[2]
} else {
h_soln = 0
p_soln = 0
m_soln = 0
}
J <- BuildJacobian(h_soln, p_soln, m_soln, cur_pars)
cur_eig <- GetEig(J)
cur_feas <- (h_soln > 0) * (p_soln > 0) * (m_soln > 0)
cur_stable <- cur_eig < 0
cur_outcome <- ifelse(!cur_feas, "\nNot feasible\n",
ifelse(cur_stable, "\nFeasible\nand stable\n",
"\nFeasible\nbut unstable\n"))
cur_dyn <- cbind(cur_params, data.frame(Outcome = cur_outcome))
cur_dyn
}
plHeatMapHost <- ggplot(out_data,
aes(x = dh, y = ch, fill = Outcome)) +
facet_wrap(~cm, labeller = label_bquote(c[m] == .(cm))) +
geom_tile() + theme_classic() +
labs(x = expression("Host Mortality" ~ (d[h])),
y = expression("Host Colonization" ~ (c[h])),
fill = "") +
scale_fill_manual("Coexistence\nstatus:", values = c("#0072B2", "#D55E00")) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
theme(axis.text = element_text( size = 10 ),
panel.spacing = unit(2, "lines"),
panel.background = element_rect(fill = NA),
strip.background = element_blank(),
axis.text.x = element_text(angle = 45, vjust = 0.5),
text = element_text(size=15),
plot.title.position = "plot",
plot.caption.position =  "plot") +
ggtitle("B")
plHeatMapHost
# generating plots of the dynamics
ch <- 2
chm <- ch # needs to be bigger than or equal to ch
dh <- c(1, 1.1, 1.2)
dhp <- 0
cp <- 5
dp <- 1
cm <- 6
dm <- 1
in_pars <- crossing(ch = ch, chm = chm, dh = dh, dhp = dhp,
cp = cp, dp = dp,
cm = cm, dm = dm)
num_repl <- 1
iterated_params <- bind_rows(replicate(num_repl, in_pars, simplify = FALSE))
iterated_params$ParsID <- 1:nrow(iterated_params)
end_time <- 50
time_step <- 0.01
dyn_data <- data.frame()
for(i in 1:nrow(iterated_params)) {
cur_params <- iterated_params[i,]
cur_pars <- as.list(cur_params)
ini_state <- c(0.2, 0.05, 0.05)
names(ini_state) <- c("Host", "Pathogen", "Mutualist")
out_dyn <- IntegrateDynamics(ini_state, cur_pars,
end_time, time_step,
fn = CoralMutPathDynamics)
cur_dyn <- cbind(cur_params, out_dyn)
dyn_data <- rbind(dyn_data, cur_dyn)
}
melt_dyn <- dyn_data %>%
select(c("dh", "time", "Host", "Pathogen", "Mutualist")) %>%
melt(id.vars = c("time", "dh"))
plDyn <- ggplot(melt_dyn, aes(x = time, y = value, color = variable)) +
geom_line(linewidth = 1) + theme_classic() +
facet_wrap(~dh, scales = "free", labeller = label_bquote(cols = d[h] == .(dh))) +
labs(x = "Time", y = "Frequency", color = "") +
ggtitle("A") +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0.05))+ #, trans = 'log10') +
scale_color_viridis_d() +
# scale_color_manual(values = c("darkblue", "darkred", "darkgreen")) +
theme(text = element_text(size=15),
legend.text=element_text(size = 15),
strip.background = element_blank(),
axis.text.x = element_text(angle = 45, vjust = 0.5),
plot.caption = element_text(hjust = 0, face= "italic"),
plot.title.position = "plot",
plot.caption.position =  "plot")
# plDyn
ch <- 4
chm <-  -1 # needs to be bigger than or equal to ch
dh <- c(0, 0.5, 1)
dhp <- 0
cp <- seq(5, 10, length.out = 5)
dp <- 1
cm <- seq(5, 35, length.out = 5)
dm <- 1
in_pars <- crossing(ch = ch, chm = chm, dh = dh, dhp = dhp,
cp = cp, dp = dp,
cm = cm, dm = dm)
in_pars$chm <- in_pars$ch
num_repl <- 1
iterated_params <- bind_rows(replicate(num_repl, in_pars, simplify = FALSE))
out_data <- data.frame()
plan(multisession)
out_data <- foreach(
i = 1:nrow(iterated_params),
.combine = 'rbind',
.inorder = FALSE) %dofuture% {
cur_params <- iterated_params[i,]
cur_pars <- as.list(cur_params)
if (cur_pars$ch > cur_pars$dh) {
root_soln <- uniroot(f = PredEq, interval = c(1e-10, 1), cur_pars)
h_soln <- root_soln$root
mp_soln <- GetPM(h_soln, cur_pars)
p_soln <- mp_soln[1]
m_soln <- mp_soln[2]
} else {
h_soln = 0
p_soln = 0
m_soln = 0
}
J <- BuildJacobian(h_soln, p_soln, m_soln, cur_pars)
cur_eig <- GetEig(J)
cur_feas <- (h_soln > 0) * (p_soln > 0) * (m_soln > 0)
cur_stable <- cur_eig < 0
cur_outcome <- ifelse(!cur_feas, "\nNot feasible\n",
ifelse(cur_stable, "\nFeasible\nand stable\n",
"\nFeasible\nbut unstable\n"))
cur_dyn <- cbind(cur_params, data.frame(Outcome = cur_outcome))
cur_dyn
}
plHeatMapClassicComp <- ggplot(out_data,
aes(x = cp, y = cm, fill = Outcome)) +
facet_wrap(~dh, labeller = label_bquote(d[h] == .(dh))) +
geom_tile() + theme_classic() +
labs(x = expression("Pathogen Colonization" ~ (c[p])),
y = expression("Mutualist Colonization" ~ (c[m])),
fill = "") +
scale_fill_manual("Coexistence\nstatus:", values = c("#0072B2", "#D55E00")) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
theme(axis.text = element_text( size = 10 ),
panel.spacing = unit(2, "lines"),
panel.background = element_rect(fill = NA),
strip.background = element_blank(),
axis.text.x = element_text(angle = 45, vjust = 0.5),
text = element_text(size=15),
plot.title.position = "plot",
plot.caption.position =  "plot") +
ggtitle("C")
plHeatMapClassicComp
# writing out figure
jpeg("./figs/Fig1HostEffect.jpeg",
width = 3000, height = 3000, res = 300)
grid.arrange(plDyn, plHeatMapHost, plHeatMapClassicComp, nrow = 3)
dev.off()
# writing out figure
jpeg("./figs/Fig1HostEffect.jpeg",
width = 3000, height = 2500, res = 300)
grid.arrange(plDyn, plHeatMapHost, plHeatMapClassicComp, nrow = 3)
dev.off()
# writing out figure
jpeg("./figs/Fig1HostEffect.jpeg",
width = 3000, height = 2750, res = 300)
grid.arrange(plDyn, plHeatMapHost, plHeatMapClassicComp, nrow = 3)
dev.off()
# writing out figure
jpeg("./figs/Fig1HostEffect.jpeg",
width = 3000, height = 3000, res = 300)
grid.arrange(plDyn, plHeatMapHost, plHeatMapClassicComp, nrow = 3)
dev.off()

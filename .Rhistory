HM_LimitCycle <- function(h, p, m, pars) {
ret <- with(pars, {
h_p0 = dhp * ((dh + dp + dhp) / cp)
h_p1 = dh - ch + dhp
h_p2 = ch
h_p = h_p0 + h_p1 * h + h_p2 * h^2
m_p0 = 0
m_p1 = (chm - ch) * (1 - (1 + (cm / cp)) * ((dh + dp + dhp)/ cp) + ((dh + dm) / cp))
m_p2 = (chm - ch) * cm / cp
m_p = m_p0 + m_p1 * m + m_p2 * m^2
ret <- m_p - h_p
return(ret)
})
return(ret)
}
hp_plot_analytical <- temp_df %>%
mutate(ret = HM_LimitCycle(Host, Pathogen, Mutualist, select(temp_df, ch:dm) %>% distinct()))
hp_plot_analytical
View(hp_plot_analytical)
hp_plot <- temp_df %>%
ggplot(aes(x = Host, y = Pathogen)) +
geom_point(size = 2, color = "black", alpha = 0.5) +
theme_classic()
hp_plot
temp_df =  out_data %>%
filter(ch == 0.5) %>%
filter(chm > 7.35 & chm < 7.4) %>%
filter(cm == 10) %>%
filter(IniCondSd == 0.001) %>%
select(variable, value, time) %>%
pivot_wider(names_from = variable, values_from = value)
hp_plot <- temp_df %>%
ggplot(aes(x = Host, y = Pathogen)) +
geom_point(size = 2, color = "black", alpha = 0.5) +
theme_classic()
hp_plot
temp_df =  out_data %>%
filter(ch == 0.5) %>%
filter(chm > 7.35 & chm < 7.4) %>%
filter(cm == 10) %>%
filter(IniCondSd == 0.001)
select(temp_df, ch:dm) %>% distinct()
hp_plot <- temp_df %>%
select(variable, value, time) %>%
pivot_wider(names_from = variable, values_from = value) %>%
ggplot(aes(x = Host, y = Pathogen)) +
geom_point(size = 2, color = "black", alpha = 0.5) +
theme_classic()
hp_plot
hp_plot_analytical <- temp_df %>%
select(variable, value, time) %>%
pivot_wider(names_from = variable, values_from = value) %>%
mutate(ret = HM_LimitCycle(Host, Pathogen, Mutualist, select(temp_df, ch:dm) %>% distinct()))
hp_plot_analytical
Host_vec = seq(0, 1, length.out = 100)
Pathogen_vec = Host_vec
limit_df = expand.grid(tibble(Host = Host_vec), tibble(Pathogen = Pathogen_vec))
limit_df
tibble(Host = Host_vec)
tibble(Pathogen = Pathogen_vec)
limit_df = expand.grid(data.frame(Host = Host_vec), data.frame(Pathogen = Pathogen_vec))
limit_df
?expand.grid
limit_df = expand_grid(data.frame(Host = Host_vec), data.frame(Pathogen = Pathogen_vec))
limit_df
limit_df = expand_grid(data.frame(Host = Host_vec), data.frame(Pathogen = Pathogen_vec)) %>%
mutate(ret = HM_LimitCycle(Host, Pathogen, Mutualist, select(temp_df, ch:dm) %>% distinct()))
limit_df = expand_grid(data.frame(Host = Host_vec), data.frame(Pathogen = Pathogen_vec)) %>%
mutate(ret = HM_LimitCycle(Host, Pathogen, 0, select(temp_df, ch:dm) %>% distinct()))
limit_df
View(limit_df)
unique(limit_df$ret)
colnames(limit_df)
?geom_contour
hp_plot_analytical <- limit_df %>%
select(variable, value, time) %>%
ggplot(aes(x = Host, y = Pathogen, z = ret)) +
geom_contour(breaks = c(1)) +
theme_classic()
hp_plot_analytical <- limit_df %>%
ggplot(aes(x = Host, y = Pathogen, z = ret)) +
geom_contour(breaks = c(1)) +
theme_classic()
hp_plot_analytical
hp_plot_analytical <- limit_df %>%
ggplot(aes(x = Host, y = Pathogen, z = ret)) +
geom_contour() +
theme_classic()
hp_plot_analytical
select(temp_df, ch:dm) %>% distinct())
select(temp_df, ch:dm) %>% distinct()
hm_plot <- temp_df %>%
select(variable, value, time) %>%
pivot_wider(names_from = variable, values_from = value) %>%
ggplot(aes(x = Host, y = Mutualist)) +
geom_point(size = 2, color = "black", alpha = 0.5) +
theme_classic()
hm_plot
limit_df = expand_grid(data.frame(Host = Host_vec), data.frame(Pathogen = Pathogen_vec)) %>%
mutate(ret = HM_LimitCycle(Host, 0, Mutualist_vec, select(temp_df, ch:dm) %>% distinct()))
limit_df
limit_df = expand_grid(data.frame(Host = Host_vec), data.frame(Pathogen = Pathogen_vec)) %>%
mutate(ret = HM_LimitCycle(Host, 0, Mutualist_vec, select(temp_df, ch:dm) %>% distinct()))
Host_vec = seq(0, 1, length.out = 100)
Mutualist_vec = Host_vec
limit_df = expand_grid(data.frame(Host = Host_vec), data.frame(Pathogen = Pathogen_vec)) %>%
mutate(ret = HM_LimitCycle(Host, 0, Mutualist_vec, select(temp_df, ch:dm) %>% distinct()))
limit_df
hm_plot_analytical <- limit_df %>%
ggplot(aes(x = Host, y = Pathogen, z = ret)) +
geom_contour() +
theme_classic()
hm_plot_analytical
hm_plot_analytical <- limit_df %>%
ggplot(aes(x = Host, y = Pathogen, z = ret)) +
geom_contour(breaks = c(1)) +
theme_classic()
hm_plot_analytical
temp_pars
select(temp_df, ch:dm) %>% distinct()
View(limit_df)
limit_df %>%
ggplot(aes(x = Host, y = Pathogen, z = ret)) +
geom_contour_filled() +
# geom_contour(breaks = c(1)) +
theme_classic()
hm_plot <- temp_df %>%
select(variable, value, time) %>%
pivot_wider(names_from = variable, values_from = value) %>%
ggplot(aes(x = Host, y = Mutualist)) +
geom_point(size = 2, color = "black", alpha = 0.5) +
theme_classic()
hm_plot
hm_plot_analytical <- limit_df %>%
ggplot(aes(x = Host, y = Pathogen, z = ret)) +
geom_contour_filled() +
# geom_contour(breaks = c(1)) +
theme_classic()
hm_plot_analytical
Host_vec = seq(0, 1, length.out = 1000)
Mutualist_vec = Host_vec
limit_df = expand_grid(data.frame(Host = Host_vec), data.frame(Pathogen = Pathogen_vec)) %>%
mutate(ret = HM_LimitCycle(Host, 0, Mutualist_vec, select(temp_df, ch:dm) %>% distinct()))
hm_plot_analytical <- limit_df %>%
ggplot(aes(x = Host, y = Pathogen, z = ret)) +
geom_contour_filled() +
# geom_contour(breaks = c(1)) +
theme_classic()
hm_plot_analytical
hm_plot_analytical <- limit_df %>%
ggplot(aes(x = Host, y = Pathogen, z = ret)) +
# geom_contour_filled() +
geom_contour(breaks = c(1)) +
theme_classic()
hm_plot_analytical
Host_vec = seq(0, 1, length.out = 100)
Mutualist_vec = Host_vec
limit_df = expand_grid(data.frame(Host = Host_vec), data.frame(Mutualist = Mutualist_vec)) %>%
mutate(ret = HM_LimitCycle(Host, 0, Mutualist, select(temp_df, ch:dm) %>% distinct()))
hm_plot_analytical <- limit_df %>%
ggplot(aes(x = Host, y = Pathogen, z = ret)) +
# geom_contour_filled() +
geom_contour(breaks = c(1)) +
theme_classic()
hm_plot_analytical
hm_plot_analytical <- limit_df %>%
ggplot(aes(x = Host, y = Mutualist, z = ret)) +
# geom_contour_filled() +
geom_contour(breaks = c(1)) +
theme_classi
hm_plot_analytical <- limit_df %>%
ggplot(aes(x = Host, y = Mutualist, z = ret)) +
# geom_contour_filled() +
geom_contour(breaks = c(1)) +
theme_classic()
hm_plot_analytical
hm_plot_analytical <- limit_df %>%
ggplot(aes(x = Host, y = Mutualist, z = ret)) +
geom_contour_filled() +
# geom_contour(breaks = c(1)) +
theme_classic()
hm_plot_analytical
Host_vec = seq(0, 1, length.out = 1000)
Mutualist_vec = Host_vec
limit_df = expand_grid(data.frame(Host = Host_vec), data.frame(Mutualist = Mutualist_vec)) %>%
mutate(ret = HM_LimitCycle(Host, 0, Mutualist, select(temp_df, ch:dm) %>% distinct()))
hm_plot_analytical <- limit_df %>%
ggplot(aes(x = Host, y = Mutualist, z = ret)) +
geom_contour_filled() +
# geom_contour(breaks = c(1)) +
theme_classic()
hm_plot_analytical
limit_df %>%
ggplot(aes(x = Host, y = Mutualist, z = ret)) +
# geom_contour_filled() +
geom_contour(breaks = c(1)) +
theme_classic(
limit_df %>%
ggplot(aes(x = Host, y = Mutualist, z = ret)) +
# geom_contour_filled() +
geom_contour(breaks = c(1)) +
theme_classic()
HM_LimitCycle <- function(h, p, m, pars) {
ret <- with(pars, {
h_p0 = dhp * ((dh + dp + dhp) / cp)
h_p1 = dh - ch + dhp
h_p2 = ch
h_p = h_p0 + h_p1 * h + h_p2 * h^2
m_p0 = 0
m_p1 = (chm - ch) * (1 - ((1 + (cm / cp)) * ((dh + dp + dhp)/ cp) + ((dh + dm) / cp)))
m_p2 = (chm - ch) * cm / cp
m_p = m_p0 + m_p1 * m + m_p2 * m^2
ret <- m_p - h_p
return(ret)
})
return(ret)
}
Host_vec = seq(0, 1, length.out = 1000)
Mutualist_vec = Host_vec
limit_df = expand_grid(data.frame(Host = Host_vec), data.frame(Mutualist = Mutualist_vec)) %>%
mutate(ret = HM_LimitCycle(Host, 0, Mutualist, select(temp_df, ch:dm) %>% distinct()))
hm_plot_analytical <- limit_df %>%
ggplot(aes(x = Host, y = Mutualist, z = ret)) +
# geom_contour_filled() +
geom_contour(breaks = c(1)) +
theme_classic()
hm_plot_analytical
hm_plot_analytical <- limit_df %>%
ggplot(aes(x = Host, y = Mutualist, z = ret)) +
geom_contour_filled() +
# geom_contour(breaks = c(1)) +
theme_classic()
hm_plot_analytical
HM_LimitCycle <- function(h, p, m, pars) {
ret <- with(pars, {
h_p0 = dhp * ((dh + dp + dhp) / cp)
h_p1 = dh - ch + dhp
h_p2 = ch
h_p = h_p0 + h_p1 * h + h_p2 * h^2
m_p0 = 0
m_p1 = (chm - ch) * (1 - ((1 + (cm / cp)) * ((dh + dp + dhp)/ cp) + ((dh + dm) / cp)))
m_p2 = (chm - ch) * cm / cp
m_p = m_p0 + m_p1 * m + m_p2 * m^2
ret <- m_p - h_p
return(ret)
})
return(ret)
}
Host_vec = seq(0, 1, length.out = 1000)
Mutualist_vec = Host_vec
limit_df = expand_grid(data.frame(Host = Host_vec), data.frame(Mutualist = Mutualist_vec)) %>%
mutate(ret = HM_LimitCycle(Host, 0, Mutualist, select(temp_df, ch:dm) %>% distinct()))
hm_plot_analytical <- limit_df %>%
ggplot(aes(x = Host, y = Mutualist, z = ret)) +
geom_contour_filled() +
# geom_contour(breaks = c(1)) +
theme_classic()
hm_plot_analytical
hm_plot_analytical <- limit_df %>%
ggplot(aes(x = Host, y = Mutualist, z = ret)) +
geom_contour_filled() +
geom_contour(breaks = c(1), color = 'red') +
theme_classic()
hm_plot_analytical
Host_vec = seq(0, 1, length.out = 1000)
Mutualist_vec = Host_vec
limit_df = expand_grid(data.frame(Host = Host_vec), data.frame(Mutualist = Mutualist_vec)) %>%
mutate(ret = HM_LimitCycle(Host, 0, Mutualist, select(temp_df, ch:dm) %>% distinct()) %>% mutate(dhp = 0.1))
select(temp_df, ch:dm) %>% mutate(dhp = 0.1) %>% distinct()
Host_vec = seq(0, 1, length.out = 1000)
Mutualist_vec = Host_vec
limit_df = expand_grid(data.frame(Host = Host_vec), data.frame(Mutualist = Mutualist_vec)) %>%
mutate(ret = HM_LimitCycle(Host, 0, Mutualist, select(temp_df, ch:dm) %>% mutate(dhp = 0.1) %>% distinct()) )
hm_plot_analytical <- limit_df %>%
ggplot(aes(x = Host, y = Mutualist, z = ret)) +
geom_contour_filled() +
geom_contour(breaks = c(1), color = 'red') +
theme_classic()
hm_plot_analytical
limit_df = expand_grid(data.frame(Host = Host_vec), data.frame(Mutualist = Mutualist_vec)) %>%
mutate(ret = HM_LimitCycle(Host, 0, Mutualist, select(temp_df, ch:dm) %>% mutate(dhp = 1) %>% distinct()) )
hm_plot_analytical <- limit_df %>%
ggplot(aes(x = Host, y = Mutualist, z = ret)) +
geom_contour_filled() +
geom_contour(breaks = c(1), color = 'red') +
theme_classic()
hm_plot_analytical
Host_vec = seq(0, 1, length.out = 1000)
Mutualist_vec = Host_vec
limit_df = expand_grid(data.frame(Host = Host_vec), data.frame(Mutualist = Mutualist_vec)) %>%
mutate(ret = HM_LimitCycle(Host, 0, Mutualist, select(temp_df, ch:dm) %>% distinct()) )
hm_plot_analytical <- limit_df %>%
ggplot(aes(x = Host, y = Mutualist, z = ret)) +
geom_contour_filled() +
geom_contour(breaks = c(1), color = 'red') +
theme_classic()
hm_plot_analytical
hm_plot_analytical
hm_plot <- temp_df %>%
select(variable, value, time) %>%
pivot_wider(names_from = variable, values_from = value) %>%
ggplot(aes(x = Host, y = Mutualist)) +
geom_point(size = 2, color = "black", alpha = 0.5) +
theme_classic()
hm_plot
?geom_point
hm_plot <- temp_df %>%
select(variable, value, time) %>%
pivot_wider(names_from = variable, values_from = value) %>%
ggplot(aes(x = Host, y = Pathogen, z = Mutualist)) +
geom_point(size = 2, color = "black", alpha = 0.5) +
theme_classic()
hm_plot
hm_plot
hm_plot <- temp_df %>%
select(variable, value, time) %>%
pivot_wider(names_from = variable, values_from = value)
plot_ly(x = Host, y = Pathogen, z = Mutualist, type = "scatter3d", mode = "markers")
library(plotly)
plot_ly(x = Host, y = Pathogen, z = Mutualist, type = "scatter3d", mode = "markers")
plot_ly(x = hm_plot$Host, y = hm_plot$Pathogen, z = hm_plot$Mutualist, type = "scatter3d", mode = "markers")
plot_ly(x = hm_plot$Host, y = hm_plot$Pathogen, z = hm_plot$Mutualist, type = "scatter3d", mode = "markers")
test = plot_ly(x = hm_plot$Host, y = hm_plot$Pathogen, z = hm_plot$Mutualist, type = "scatter3d", mode = "markers")
test
show(test)
show(test)
hm_plot <- temp_df %>%
select(variable, value, time) %>%
pivot_wider(names_from = variable, values_from = value) %>%
ggplot(aes(x = Host, y = Pathogen, z = Mutualist)) +
geom_point(size = 2, color = "black", alpha = 0.5) +
theme_classic()
hm_plot
hm_plot
hm_plot <- temp_df %>%
select(variable, value, time) %>%
pivot_wider(names_from = variable, values_from = value) %>%
ggplot(aes(x = Mutualist, y = Pathogen, z = Mutualist)) +
geom_point(size = 2, color = "black", alpha = 0.5) +
theme_classic()
hm_plot
hm_plot <- temp_df %>%
select(variable, value, time) %>%
pivot_wider(names_from = variable, values_from = value) %>%
ggplot(aes(x = Host, y = Mutualist, z = Mutualist)) +
geom_point(size = 2, color = "black", alpha = 0.5) +
coord_cartesian(xlim = c(0,1), ylim = c(0,10)) +
theme_classic()
hm_plot
hm_plot <- temp_df %>%
select(variable, value, time) %>%
pivot_wider(names_from = variable, values_from = value) %>%
ggplot(aes(x = Host, y = Pathogen, z = Mutualist)) +
geom_point(size = 2, color = "black", alpha = 0.5) +
coord_cartesian(xlim = c(0,1), ylim = c(0,10)) +
theme_classic()
hm_plot
hm_plot <- temp_df %>%
select(variable, value, time) %>%
pivot_wider(names_from = variable, values_from = value) %>%
ggplot(aes(x = Mutualist, y = Pathogen, z = Mutualist)) +
geom_point(size = 2, color = "black", alpha = 0.5) +
coord_cartesian(xlim = c(0,1), ylim = c(0,10)) +
theme_classic()
hm_plot
limit_df = expand_grid(data.frame(Host = Host_vec), data.frame(Mutualist = Mutualist_vec)) %>%
mutate(ret = HM_LimitCycle(Host, 0, Mutualist, select(temp_df, ch:dm) %>% distinct()) )
hm_plot_analytical <- limit_df %>%
ggplot(aes(x = Host, y = Mutualist, z = ret)) +
geom_contour_filled() +
geom_contour(breaks = c(1), color = 'red') +
theme_classic()
hm_plot_analytical
hm_plot <- temp_df %>%
select(variable, value, time) %>%
pivot_wider(names_from = variable, values_from = value) %>%
ggplot(aes(x = Host, y = Mutualist, z = Mutualist)) +
geom_point(size = 2, color = "black", alpha = 0.5) +
coord_cartesian(xlim = c(0,1), ylim = c(0,10)) +
theme_classic()
hm_plot
HM_LimitCycle <- function(h, p, m, pars) {
ret <- with(pars, {
h_p0 = dhp * ((dh + dp + dhp) / cp)
h_p1 = dh - ch + dhp
h_p2 = ch
h_p = h_p0 + h_p1 * h + h_p2 * h^2
m_p0 = 0
m_p1 = (chm - ch) * (1 + ((dh + dm) / cp) + (1 + (cp / cm)) * ((dh + dp) / cp))
m_p2 = (chm - ch) * cm / cp
m_p = m_p0 + m_p1 * m + m_p2 * m^2
ret <- m_p - h_p
return(ret)
})
return(ret)
}
Host_vec = seq(0, 1, length.out = 1000)
Mutualist_vec = Host_vec
limit_df = expand_grid(data.frame(Host = Host_vec), data.frame(Mutualist = Mutualist_vec)) %>%
mutate(ret = HM_LimitCycle(Host, 0, Mutualist, select(temp_df, ch:dm) %>% distinct()) )
hm_plot_analytical <- limit_df %>%
ggplot(aes(x = Host, y = Mutualist, z = ret)) +
geom_contour_filled() +
geom_contour(breaks = c(1), color = 'red') +
theme_classic()
hm_plot_analytical
hm_plot <- temp_df %>%
select(variable, value, time) %>%
pivot_wider(names_from = variable, values_from = value) %>%
ggplot(aes(x = Host, y = Mutualist, z = Mutualist)) +
geom_point(size = 2, color = "black", alpha = 0.5) +
coord_cartesian(xlim = c(0,1), ylim = c(0,10)) +
theme_classic()
hm_plot
hm_plot_analytical <- limit_df %>%
ggplot(aes(x = Host, y = Mutualist, z = ret)) +
geom_contour_filled() +
geom_contour(breaks = c(1), color = 'red') +
theme_classic()
hm_plot_analytical
Host_vec = seq(0, 1, length.out = 100)
Mutualist_vec = Host_vec
limit_df = expand_grid(data.frame(Host = Host_vec), data.frame(Mutualist = Mutualist_vec)) %>%
mutate(ret = HM_LimitCycle(Host, 0, Mutualist, select(temp_df, ch:dm) %>% distinct()) )
hm_plot_analytical <- limit_df %>%
ggplot(aes(x = Host, y = Mutualist, z = ret)) +
geom_contour_filled() +
geom_contour(breaks = c(1), color = 'red') +
theme_classic()
hm_plot_analytical
Host_vec = seq(0, 1, length.out = 100)
Pathogen_vec = Host_vec
Mutualist_vec = Host_vec
limit_df = expand_grid(data.frame(Host = Host_vec), data.frame(Mutualist = Mutualist_vec), data.frame(Pathogen = Pathogen_vec)) %>%
mutate(ret = HM_LimitCycle(Host, Pathogen, Mutualist, select(temp_df, ch:dm) %>% distinct()) )
hm_plot_analytical <- limit_df %>%
ggplot(aes(x = Host, y = Mutualist, z = ret)) +
geom_contour_filled() +
geom_contour(breaks = c(1), color = 'red') +
theme_classic()
hm_plot_analytical
HM_LimitCycle <- function(h, p, m, pars) {
ret <- with(pars, {
LHS = -ch * h^2 + (ch - dh) * h + (chm - ch) * (1 - h) * m
RHS = dhp * p
# h_p0 = dhp * ((dh + dp + dhp) / cp)
# h_p1 = dh - ch + dhp
# h_p2 = ch
# h_p = h_p0 + h_p1 * h + h_p2 * h^2
#
# m_p0 = 0
# m_p1 = (chm - ch) * (1 + ((dh + dm) / cp) + (1 + (cp / cm)) * ((dh + dp) / cp))
# m_p2 = (chm - ch) * cm / cp
# m_p = m_p0 + m_p1 * m + m_p2 * m^2
# ret <- m_p - h_p
ret <- LHS - RHS
return(ret)
})
return(ret)
}
Host_vec = seq(0, 1, length.out = 100)
Pathogen_vec = Host_vec
Mutualist_vec = Host_vec
limit_df = expand_grid(data.frame(Host = Host_vec), data.frame(Mutualist = Mutualist_vec), data.frame(Pathogen = Pathogen_vec)) %>%
mutate(ret = HM_LimitCycle(Host, Pathogen, Mutualist, select(temp_df, ch:dm) %>% distinct()) )
hm_plot_analytical <- limit_df %>%
ggplot(aes(x = Host, y = Mutualist, z = ret)) +
geom_contour_filled() +
geom_contour(breaks = c(1), color = 'red') +
theme_classic()
hm_plot_analytical
hm_plot_analytical <- limit_df %>%
ggplot(aes(x = Host, y = Pathogen, z = ret)) +
geom_contour_filled() +
geom_contour(breaks = c(1), color = 'red') +
theme_classic()
hm_plot_analytical
hm_plot_analytical <- limit_df %>%
ggplot(aes(x = Mutualist, y = Pathogen, z = ret)) +
geom_contour_filled() +
geom_contour(breaks = c(1), color = 'red') +
theme_classic()
hm_plot_analytical
limit_df = expand_grid(data.frame(Host = Host_vec), data.frame(Mutualist = Mutualist_vec), data.frame(Pathogen = Pathogen_vec)) %>%
mutate(ret = HM_LimitCycle(Host, Pathogen, Mutualist, select(temp_df, ch:dm) %>% mutate(dhp = 0.1) %>% distinct()) )
hm_plot_analytical <- limit_df %>%
ggplot(aes(x = Mutualist, y = Pathogen, z = ret)) +
geom_contour_filled() +
geom_contour(breaks = c(1), color = 'red') +
theme_classic()
hm_plot_analytical
hm_plot_analytical <- limit_df %>%
ggplot(aes(x = Host, y = Pathogen, z = ret)) +
geom_contour_filled() +
geom_contour(breaks = c(1), color = 'red') +
theme_classic()
hm_plot_analytical
hm_plot_analytical <- limit_df %>%
ggplot(aes(x = Host, y = Mutualist, z = ret)) +
geom_contour_filled() +
geom_contour(breaks = c(1), color = 'red') +
theme_classic()
hm_plot_analytical
hm_plot
hm_plot <- temp_df %>%
select(variable, value, time) %>%
pivot_wider(names_from = variable, values_from = value) %>%
ggplot(aes(x = Host, y = Mutualist, z = Mutualist)) +
geom_point(size = 2, color = "black", alpha = 0.5) +
# coord_cartesian(xlim = c(0,1), ylim = c(0,10)) +
theme_classic()
hm_plot
